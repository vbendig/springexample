buildscript {
	ext {
		queryDslVersion = '5.0.0'
		javaxVersion = '1.3.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.flywaydb:flyway-mysql:9.8.1"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.flywaydb.flyway" version "9.8.1"
	id 'idea'
}
apply plugin: "io.spring.dependency-management"

idea {
	module {
		sourceDirs += file('generated/')
		generatedSourceDirs += file('generated/')
	}
}

group = 'com.gorillalogic'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	LOMBOK
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

//	FLYWAY
	compileOnly "org.flywaydb:flyway-mysql"

//	SPRING
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'

//	DB
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final"
	testRuntimeOnly 'com.h2database:h2'

//	MAPSTRUCT
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

//	QUERYDSL
	implementation "com.querydsl:querydsl-sql:${queryDslVersion}"
	implementation "com.querydsl:querydsl-core:${queryDslVersion}"
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:general")
	testImplementation "com.querydsl:querydsl-sql:${queryDslVersion}"
	testImplementation "com.querydsl:querydsl-core:${queryDslVersion}"
	testImplementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	testAnnotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:general")
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	locations = ['classpath:db/migration']
	configFiles = ['db/flyway.conf']
}
